#!/usr/bin/python3
import time
import math

def is_prime(n):
    if n <= 1:
        return False
    elif n <= 3:
        return True
    elif n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

def find_prime_factors(n):
    factors = []
    while n % 2 == 0:
        factors.append(2)
        n //= 2
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        while n % i == 0:
            factors.append(i)
            n //= i
    if n > 2:
        factors.append(n)
    return factors

def main():
    start_time = time.time()
    with open("tests/rsa-1") as f:
        num = int(f.read().strip())
        prime_factors = find_prime_factors(num)
        if len(prime_factors) == 2:
            print("p = {}, q = {}".format(prime_factors[0], prime_factors[1]))
        else:
            print("Unable to find prime factors.")
    print("Execution time: {:.6f} seconds".format(time.time() - start_time))

if __name__ == "__main__":
    main()
