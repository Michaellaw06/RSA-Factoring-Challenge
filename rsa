#!/usr/bin/python3
from sys import argv

def find_prime_factors(num):
  factors = []
  while num % 2 == 0:
    factors.append(2)
    num //= 2
  while num % 3 == 0:
    factors.append(3)
    num //= 3
  factor = 5
  while factor * factor <= num:
    while num % factor == 0:
      factors.append(factor)
      num //= factor
    factor += 4  # Increment by 4 to check only odd potential factors
  if num > 1:
    factors.append(num)
  return factors

def is_perfect_square(num):
  # Check if the square root is an integer
  return int(num**0.5) ** 2 == num

with open(argv[1]) as f:
  for line in f:
    num = int(line.strip())
    factors = find_prime_factors(num)
    if len(factors) == 1 and is_perfect_square(num):
      # Perfect square case: print first factor twice
      sqrt_num = int(num**0.5)
      print(f"{num}={sqrt_num}*{sqrt_num}")
    elif len(factors) >= 2:
      factors.sort()  # Sort factors to ensure consistent output
      print("{}={}*{}".format(num, factors[0], factors[1]))
    else:
      print("Number {} has less than two prime factors".format(num))
